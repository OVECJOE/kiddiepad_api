// create/update a donator
app.post('/api/users/:userId/support/:type', (req, res) => {
    const { userId, type } = req.params;
    const amount = req.body.amount;

    (type === 'project' || type === 'writer') ?
        User.findOne({ _id: userId }, (err, user) => {
            if (err) {
                res.status(500).send(
                    { error: 'Could not find user at the moment, try again.' }
                );
            } else {
                if (!user) {
                    res.status(404).send(
                        { error: 'User with given id not found.' }
                    );
                } else {
                    Donator.findOneAndUpdate({ userId }, {
                        $inc: { totalDonations: amount },
                        $addToSet: {
                            history: {
                                type, amount, timestamp: Date()
                            }
                        }
                    }, { new: true }, (err, donator) => {
                        if (err) {
                            res.status(500).send(
                                { error: err.message }
                            );
                        } else {
                            if (donator) {
                                res.send(donator);
                            } else {
                                Donator.create({
                                    userId: user._id,
                                    history: [
                                        { type, amount, timestamp: Date() },
                                    ],
                                    totalDonations: amount
                                }, (err, newDonator) => {
                                    if (err) {
                                        res.status(500).send(
                                            { error: err.message }
                                        );
                                    } else {
                                        res.send(newDonator);
                                    }
                                });
                            }
                        }
                    });
                }
            }
        }) : res.status(400).send(
            { error: "type parameter must be in ['project', 'writer']" }
        )
});

// create customer
stripe.customers.create({
    name: `${user.firstName} ${user.lastName}`,
    email: user.email,
    source: req.body.stripe_token
})
    .then(customer => stripe.charges.create({
        amount: req.body.amount * 100,
        currency: 'usd',
        customer: customer.id
    })
    .then(() => res.send())
);